<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--配置目标类-->
    <bean id="userDao" class="com.jncm.principle.aop.UserDaoImpl"/>
    <bean id="productDao" class="com.jncm.principle.aop.ProductDao"/>
    <!--前置通知类型-->
    <bean id="myBeforeAdvice" class="com.jncm.principle.aop.MyBeforeAdvice"/>

    <!--配置环绕通知-->
    <bean id="myAroundAdvice" class="com.jncm.principle.aop.MyAroundAdvice"/>

    <!--Spring AOP 产生代理对象-->
    <bean id="userDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!--配置目标类-->
        <property name="target" ref="userDao"/>
        <!--实现的接口-->
        <property name="proxyInterfaces" value="com.jncm.principle.aop.UserDao"/>
        <!--拦截的名称-->
        <property name="interceptorNames" value="myAdvisor"/>
        <!--是否返回单例-->
        <property name="singleton" value="true"/>
        <!--设置为true 强制使用CGLib-->
        <property name="optimize" value="false"/>
    </bean>

    <bean id="myAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <!--正则表达式    .任意字符   *任意次数-->
        <property name="pattern" value="com\.jncm\.principle\.aop\.ProductDao\.save"/>
        <property name="advice" ref="myAroundAdvice"/>
    </bean>

    <!--Spring AOP 产生代理对象-->
    <bean id="productDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="productDao"/>
        <property name="proxyTargetClass" value="true"/>
        <property name="interceptorNames">
            <list>
                <value>myAdvisor</value>
                <!--<value>myBeforeAdvice</value>-->
            </list>
        </property>
        <property name="singleton" value="true"/>
        <property name="optimize" value="true"/>
    </bean>
</beans>